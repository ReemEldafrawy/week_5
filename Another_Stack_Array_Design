
#include <iostream>
#include <cassert>
using namespace std;
const int maxsize = 100;

class Stack {
private:
	int size;
	int add_element;
	int arr[maxsize];
public:
	Stack()
	{
		add_element = -1;
		size = maxsize;
	}


	bool push(int x) {
		if (isfull()) {
			return false;
		}
		else{
			arr[++add_element] = x;
			return true;
		}
	}

	bool pop() {
		if (isempty()) {
			return false;
		}else{
			return arr[add_element--];
			return true;
		}
	}

	bool peek(int& result) {
		if (isempty()) {
			return false;
		}
		else
		{
			int result = arr[0];
			cout << result;
			return true;
		}
	}

	int isfull() {
		return add_element == (size - 1);
	}

	int isempty() {
		return add_element == -1;
	}

	void display() {
		for (int i = add_element; i >= 0; i--)
		{
			cout << arr[i] << " ";
		}cout << endl;

	}
	
	
	

	
	
	

};

int main() {

	Stack s;
	s.push(1);
	s.push(2);
	s.push(3);
	s.push(4);
	s.display();
	int result;
	cout << s.peek(result) << " ";
	
	
	


}
