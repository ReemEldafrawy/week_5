#include <iostream>
using namespace std;
#include<string>
const int maxsize = 100;
class stack
{
    int top;
    char arr[maxsize];
public:
    stack()
    {
        top = -1;
    }
    void push(char c)
    {
        if (top>=maxsize)
        {
            cout << "stack is full\n";
        }
        else                            //function push
        {
            top++;
            arr[top] = c;
        }
    }
    void pop()
    {

        if (top == -1)
        {
            cout << "stack is empty\n";
        }
        else                        //function pop
        {
            top--;
        }
    }
    bool isempty()
    {
        return top == -1;
    }
    bool isvalid(string s)
    {
        for (int i = 0; i < s.length(); i++)    // for loop on all characters in string
        {
            if (s[i] == '{' || s[i] == '[' || s[i] == '(')   //push to open brackets
            {
                push(s[i]);
            }
            else {

                if (isempty() || (s[i] == '{' && top != '}') || (s[i] == '(' && top != ')') || (s[i] == '[' && top != ']'))
                {
                    return false;    // stack is empty or don't there close brackets return false;
                }
                pop(); //pop all elements in stack;


            }
}

        return isempty();   //return stack is empty or not;



    }
 


};


int main()
{
    stack s;
    string valid = "[()]";
    cout << s.isvalid(valid) << endl;



}
