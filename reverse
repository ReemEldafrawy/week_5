#include <iostream>
#include <cassert>
using namespace std;
const int maxsize = 100;

class Stack {
private:
	int size;
	int top;
	int arr[maxsize];
public:
	Stack()
	{
		top = -1;
		size = maxsize;
	}


	void push(int x) {
		if (!isfull()) {
			arr[++top] = x;
		}
	}

	int pop() {
		if (!isempty()) {
			return arr[top--];
		}
	}

	int peek() {
		if (!isempty()) {
			return arr[top];
		}
	}

	int isfull() {
		return top == (size - 1);
	}

	int isempty() {
		return top == -1;
	}

	void display() {
		for (int i = top; i >= 0; i--)
		{
			cout << arr[i] << " ";
		}cout << endl;

	}
	void insertatthebottom(int key)
	{
		if (isempty())
		{
			push(key);
		}
		else
		{
			int element = pop();
			insertatthebottom(key);
			push(element);




		}




	}
	void reverse()
	{
		if (!isempty())
		
		{
			int item = pop();
			reverse();
			insertatthebottom(item);


		}





	}

	

};

int main() {

	Stack s;
	s.push(1);
	s.push(2);
	s.push(3);
	s.push(4);
	s.display();
	s.reverse();
	s.display();
	
	


}
