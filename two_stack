
#include <iostream>
#include <cassert>
using namespace std;
const int maxsize = 100;

class Stack {
private:
	int size;
	int top;
	int top2;
	int arr[maxsize];
public:
	Stack()
	{
		top = -1;

		size = maxsize;
		top2 = size;
	}
	int isempty(int x) {
		if (x == -1) {
			return top == -1;
		}
		else
		{
			return top2 = size;
		}
	}


	void  push(int x, int y) {
		if (!isfull()) {
			if (x == 1)
			{
				arr[++top] = y;
			}
			else
			{
				arr[top2--] = y;
			}


		}



	}

	int pop(int x) {
		if (!isempty(x)) {
			if (x == 1)
			{
				return arr[top--];
			}
			else
			{
				return arr[top2++];
			}

		}
	}

	int peek(int x) {
		if (!isempty(x)) {
			if (x == 1)
			{
				return arr[top];
			}
			else
			{
				return arr[top2];
			}


		}
	}

	int isfull() {
		return top + 1 >= top2;
	}

	void display() {
		for (int i = top; i >= 0; i--)
		
			cout << arr[i] << " ";
			cout << endl;
	    for (int i = top2; i < size; i++)
				cout << arr[i] << " ";
		     cout << endl;

	}









};

int main() {

	Stack s;
	s.push(2, 5);
	s.push(2, 6);
	s.push(2, 7);
	s.pop(2);
	s.push(2, 9);
	s.display();
	s.push(1, 4);
	s.push(1, 6);
	s.push(1, 8);
	s.display();




}
